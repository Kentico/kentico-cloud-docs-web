<!--CodeSample programmingLanguage=JSON platform=-->
```json
{ 
    "type": "asset",
    "name": "Teaser image",
    "value": [
    {
        "name": "coffee-beverages-explained-1080px.jpg",
        "type": "image/jpeg",
        "size": "90895",
        "description": null,
        "url": "https://assets-us-01.kc-usercontent.com/38af179c-40ba-42e7-a5ca-33b8cdcc0d45/e700596b-03b0-4cee-ac5c-9212762c027a/coffee-beverages-explained-1080px.jpg",
        "width": 1000,
        "height": 666
    }
    ]
}
```
<!--CodeSample-end-->

<pre class="line-numbers" data-platform-code="">
<div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">JSON</li></ul><div class="infobar__copy">Copy</div></div>
<div class="clean-code">"teaser_image": { 
    "type": "asset",
    "name": "Teaser image",
    "value": [
    {
        "name": "coffee-beverages-explained-1080px.jpg",
        "type": "image/jpeg",
        "size": "90895",
        "description": null,
        "url": "https://assets-us-01.kc-usercontent.com/38af179c-40ba-42e7-a5ca-33b8cdcc0d45/e700596b-03b0-4cee-ac5c-9212762c027a/coffee-beverages-explained-1080px.jpg",
        "width": 1000,
        "height": 666
    }
    ]
}
</div>
</pre>

////////////////////////////////////////////////////////

<!--Callout type=Note-->
<p><strong>API requests limit</strong></p><p>Requests made to the Delivery API count towards the overall API Calls limit set in our Fair Use Policy. This does NOT apply to Delivery Preview API calls to preview unpublished content.</p>
<!--Callout-end-->

<div class="callout callout--note"><p><strong>API requests limit</strong></p><p>Requests made to the Delivery API count towards the overall API Calls limit set in our Fair Use Policy. This does NOT apply to Delivery Preview API calls to preview unpublished content.</p></div>

/////////////////////////////////////////////////////////

<!--CodeSamples-->
    <!--CodeSample programmingLanguage=Java platform=Android-->
    ```java
    import com.kenticocloud.delivery_core.*;
    import com.kenticocloud.delivery_rx.*;

    import io.reactivex.Observer;
    import io.reactivex.disposables.Disposable;
    import io.reactivex.functions.Function;

    // Prepares the DeliveryService configuration object
    String projectId = "975bf280-fd91-488c-994c-2f04416e5ee3";
    IDeliveryConfig config = DeliveryConfig.newConfig(projectId);

    // Initializes a DeliveryService for Java projects
    IDeliveryService deliveryService = new DeliveryService(config);

    // Gets all content items using a simple request
    List&lt;ContentItem&gt; items = deliveryService.&lt;ContentItem&gt;items()
        .get()
        .getItems();

    // Gets all content items using RxJava2
    deliveryService.&lt;ContentItem&gt;items()
        .getObservable()
        .subscribe(new Observer&lt;DeliveryItemListingResponse&lt;ContentItem&gt;&gt;() {
            @Override
            public void onSubscribe(Disposable d) {
            }

            @Override
            public void onNext(DeliveryItemListingResponse&lt;ContentItem&gt; response) {
                // Gets the content items
                List&lt;ContentItem&gt; items = response.getItems();
            }

            @Override
            public void onError(Throwable e) {
            }

            @Override
            public void onComplete() {
            }
        });
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=Swift platform=iOS-->
    ```swift
    import KenticoCloud

    let client = DeliveryClient.init(projectId: "975bf280-fd91-488c-994c-2f04416e5ee3")

    // Note: Using "items" as custom query returns all content items,
    // but to map them to a single model, a filter is needed.
    let customQuery = "items?system.type=article"

    // More about strongly-typed models https://github.com/Kentico/cloud-sdk-swift#using-strongly-typed-models
    client.getItems(modelType: Article.self, customQuery: customQuery) { (isSuccess, itemsResponse, error) in
        if isSuccess {
            if let articles = itemsResponse?.items {
                // Use your items here
            }
        } else {
            if let error = error {
                print(error)
            }
        }
    }
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=Java platform=Java-->
    ```java
    import com.kenticocloud.delivery;

    DeliveryClient client = new DeliveryClient("975bf280-fd91-488c-994c-2f04416e5ee3");

    List&lt;NameValuePair&gt; params = DeliveryParameterBuilder.params()
        .build();

    ContentItemsListingResponse listingResponse = client.getItems();
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=Javascript platform=JavaScript-->
    ```javascript
    const KenticoCloud = require("kentico-cloud-delivery");

    const deliveryClient = new KenticoCloud.DeliveryClient({
        projectId: "975bf280-fd91-488c-994c-2f04416e5ee3"
    });

    deliveryClient.items()
        .getObservable()
        .subscribe(response =&gt; console.log(response));
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=C# platform=_NET-->
    ```csharp
    using KenticoCloud.Delivery;

    // Initializes a content delivery client
    IDeliveryClient client = DeliveryClientBuilder
          .WithProjectId("975bf280-fd91-488c-994c-2f04416e5ee3")
          .Build();

    // Gets all content items
    // Note: Using the &lt;object&gt; generic parameter produces strongly typed objects, based on "system.type"
    DeliveryItemListingResponse&lt;object&gt; response = await client.GetItemsAsync&lt;object&gt;();

    var items = response.Items;
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=PHP platform=PHP-->
    ```php
    &lt;?php
    // Defined by Composer to include required libraries
    require __DIR__ . "/vendor/autoload.php";

    use KenticoCloud\Delivery\DeliveryClient;

    $client = new DeliveryClient("975bf280-fd91-488c-994c-2f04416e5ee3");

    $items = $client-&gt;getItems();
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=cURL platform=REST-->
    ```
    curl --request GET \
      --url "https://deliver.kenticocloud.com/975bf280-fd91-488c-994c-2f04416e5ee3/items"
      --header "content-type: application/json"
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=Ruby platform=Ruby-->
    ```csharp
    require "delivery-sdk-ruby"

    delivery_client = KenticoCloud::Delivery::DeliveryClient.new project_id: "975bf280-fd91-488c-994c-2f04416e5ee3"
    delivery_client.items.execute do |response|
      items = response.items
      items.each { |item| puts item.system.codename }
    end
    ```
    <!--CodeSample-end-->
    <!--CodeSample programmingLanguage=TypeScript platform=TypeScript-->
    ```csharp
    import { ContentItem, DeliveryClient } from "kentico-cloud-delivery";

    const deliveryClient = new DeliveryClient({
      projectId: "975bf280-fd91-488c-994c-2f04416e5ee3"
    });

    deliveryClient.items&lt;ContentItem&gt;()
        .getObservable()
        .subscribe(response =&gt; console.log(response));
    ```
    <!--CodeSample-end-->
    <!--CodeSamples-end-->



    <ul class="language-selector__list">
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="rest">cURL</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="javascript">JavaScript</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="typescript">TypeScript</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="_net">.NET</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="java">Java</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="android">Android</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="ios">iOS</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="php">PHP</a></li>
      <li class="language-selector__item"><a class="language-selector__link" href="#" data-platform="ruby">Ruby</a></li>
    </ul>

    <pre class="line-numbers" data-platform-code="android">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">Java</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">import com.kenticocloud.delivery_core.*;
    import com.kenticocloud.delivery_rx.*;

    import io.reactivex.Observer;
    import io.reactivex.disposables.Disposable;
    import io.reactivex.functions.Function;

    // Prepares the DeliveryService configuration object
    String projectId = "975bf280-fd91-488c-994c-2f04416e5ee3";
    IDeliveryConfig config = DeliveryConfig.newConfig(projectId);

    // Initializes a DeliveryService for Java projects
    IDeliveryService deliveryService = new DeliveryService(config);

    // Gets all content items using a simple request
    List&lt;ContentItem&gt; items = deliveryService.&lt;ContentItem&gt;items()
        .get()
        .getItems();

    // Gets all content items using RxJava2
    deliveryService.&lt;ContentItem&gt;items()
        .getObservable()
        .subscribe(new Observer&lt;DeliveryItemListingResponse&lt;ContentItem&gt;&gt;() {
            @Override
            public void onSubscribe(Disposable d) {
            }

            @Override
            public void onNext(DeliveryItemListingResponse&lt;ContentItem&gt; response) {
                // Gets the content items
                List&lt;ContentItem&gt; items = response.getItems();
            }

            @Override
            public void onError(Throwable e) {
            }

            @Override
            public void onComplete() {
            }
        });
    </div>
    </pre>
    <pre class="line-numbers" data-platform-code="ios">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">swift</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">import KenticoCloud

    let client = DeliveryClient.init(projectId: "975bf280-fd91-488c-994c-2f04416e5ee3")

    // Note: Using "items" as custom query returns all content items,
    // but to map them to a single model, a filter is needed.
    let customQuery = "items?system.type=article"

    // More about strongly-typed models https://github.com/Kentico/cloud-sdk-swift#using-strongly-typed-models
    client.getItems(modelType: Article.self, customQuery: customQuery) { (isSuccess, itemsResponse, error) in
        if isSuccess {
            if let articles = itemsResponse?.items {
                // Use your items here
            }
        } else {
            if let error = error {
                print(error)
            }
        }
    }
    </div></pre>
    <pre class="line-numbers" data-platform-code="java">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">Java</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">import com.kenticocloud.delivery;

    DeliveryClient client = new DeliveryClient("975bf280-fd91-488c-994c-2f04416e5ee3");

    List&lt;NameValuePair&gt; params = DeliveryParameterBuilder.params()
        .build();

    ContentItemsListingResponse listingResponse = client.getItems();
    </div></pre>
    <pre class="line-numbers" data-platform-code="javascript">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">JavaScript</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">const KenticoCloud = require("kentico-cloud-delivery");

    const deliveryClient = new KenticoCloud.DeliveryClient({
        projectId: "975bf280-fd91-488c-994c-2f04416e5ee3"
    });

    deliveryClient.items()
        .getObservable()
        .subscribe(response =&gt; console.log(response));
    </div></pre>
    <pre class="line-numbers" data-platform-code="_net">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">C#</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">using KenticoCloud.Delivery;

    // Initializes a content delivery client
    IDeliveryClient client = DeliveryClientBuilder
          .WithProjectId("975bf280-fd91-488c-994c-2f04416e5ee3")
          .Build();

    // Gets all content items
    // Note: Using the &lt;object&gt; generic parameter produces strongly typed objects, based on "system.type"
    DeliveryItemListingResponse&lt;object&gt; response = await client.GetItemsAsync&lt;object&gt;();

    var items = response.Items;
    </div></pre>
    <pre class="line-numbers" data-platform-code="php">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">PHP</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">&lt;?php
    // Defined by Composer to include required libraries
    require __DIR__ . "/vendor/autoload.php";

    use KenticoCloud\Delivery\DeliveryClient;

    $client = new DeliveryClient("975bf280-fd91-488c-994c-2f04416e5ee3");

    $items = $client-&gt;getItems();
    </div></pre>
    <pre class="line-numbers" data-platform-code="rest">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">cURL</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">curl --request GET \
      --url "https://deliver.kenticocloud.com/975bf280-fd91-488c-994c-2f04416e5ee3/items"
      --header "content-type: application/json"
    </div></pre>
    <pre class="line-numbers" data-platform-code="ruby">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">ruby</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">require "delivery-sdk-ruby"

    delivery_client = KenticoCloud::Delivery::DeliveryClient.new project_id: "975bf280-fd91-488c-994c-2f04416e5ee3"
    delivery_client.items.execute do |response|
      items = response.items
      items.each { |item| puts item.system.codename }
    end
    </div></pre>
    <pre class="line-numbers" data-platform-code="typescript">
    <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">TypeScript</li></ul><div class="infobar__copy">Copy</div></div>
    <div class="clean-code">import { ContentItem, DeliveryClient } from "kentico-cloud-delivery";

    const deliveryClient = new DeliveryClient({
      projectId: "975bf280-fd91-488c-994c-2f04416e5ee3"
    });

    deliveryClient.items&lt;ContentItem&gt;()
        .getObservable()
        .subscribe(response =&gt; console.log(response));
    </div></pre>

    //////////////////////////////////////////////////////////////

    <!--CodeSample programmingLanguage=JSON platform=-->
      ```json
      # Delivery API
      "content": {
        "type": "rich_text",
        "name": "Content",
        "images": {},
        "links": {},
        "modular_content": [],
        "value": "&lt;p&gt;&lt;a href=\"http://www.kenticocloud.com\" title=\"#1 CMS\"&gt;Kentico Cloud&lt;/a&gt;&lt;/p&gt;"
      }

      # Content Management API v2
      {
        "element": {
          "id": "0ddd5a94-0360-5126-92e6-264dfbb61849"
        },
        "value": "&lt;p&gt;&lt;a href=\"http://www.kenticocloud.com\" title=\"#1 CMS\"&gt;Kentico Cloud&lt;/a&gt;&lt;/p&gt;"
      }
      ```
      <!--CodeSample-end-->


      <pre class="line-numbers" data-platform-code="">
      <div class="infobar"><ul class="infobar__languages"><li class="infobar__lang">JSON</li></ul><div class="infobar__copy">Copy</div></div>
      <div class="clean-code"># Delivery API
      "content": {
        "type": "rich_text",
        "name": "Content",
        "images": {},
        "links": {},
        "modular_content": [],
        "value": "&lt;p&gt;&lt;a href=\"http://www.kenticocloud.com\" title=\"#1 CMS\"&gt;Kentico Cloud&lt;/a&gt;&lt;/p&gt;"
      }

      # Content Management API v2
      {
        "element": {
          "id": "0ddd5a94-0360-5126-92e6-264dfbb61849"
        },
        "value": "&lt;p&gt;&lt;a href=\"http://www.kenticocloud.com\" title=\"#1 CMS\"&gt;Kentico Cloud&lt;/a&gt;&lt;/p&gt;"
      }
      </div></pre>